// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Agl.Cdr.Common;

namespace Agl.Cdr.Common.Models
{
    /// <summary> The CommonOrganisationDetailV2. </summary>
    public partial class CommonOrganisationDetailV2 : CommonOrganisation
    {
        /// <summary> Initializes a new instance of CommonOrganisationDetailV2. </summary>
        /// <param name="agentLastName"> The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field. </param>
        /// <param name="agentRole"> The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display. Default to Unspecified if the role is not known. </param>
        /// <param name="businessName"> Name of the organisation. </param>
        /// <param name="organisationType"> Legal organisation type. </param>
        /// <param name="physicalAddresses"> Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="agentLastName"/>, <paramref name="agentRole"/>, <paramref name="businessName"/>, or <paramref name="physicalAddresses"/> is null. </exception>
        internal CommonOrganisationDetailV2(string agentLastName, string agentRole, string businessName, CommonOrganisationType organisationType, List<CommonPhysicalAddressWithPurpose2> physicalAddresses) : base(agentLastName, agentRole, businessName, organisationType)
        {
            if (agentLastName == null)
            {
                throw new ArgumentNullException(nameof(agentLastName));
            }
            if (agentRole == null)
            {
                throw new ArgumentNullException(nameof(agentRole));
            }
            if (businessName == null)
            {
                throw new ArgumentNullException(nameof(businessName));
            }
            if (physicalAddresses == null)
            {
                throw new ArgumentNullException(nameof(physicalAddresses));
            }

            PhysicalAddresses = physicalAddresses;
        }

        /// <summary> Initializes a new instance of CommonOrganisationDetailV2. </summary>
        /// <param name="lastUpdateTime"> The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data. </param>
        /// <param name="agentFirstName"> The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present.  The single name should be in the lastName field. </param>
        /// <param name="agentLastName"> The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field. </param>
        /// <param name="agentRole"> The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display. Default to Unspecified if the role is not known. </param>
        /// <param name="businessName"> Name of the organisation. </param>
        /// <param name="legalName"> Legal name, if different to the business name. </param>
        /// <param name="shortName"> Short name used for communication, if different to the business name. </param>
        /// <param name="abn"> Australian Business Number for the organisation. </param>
        /// <param name="acn"> Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type. </param>
        /// <param name="isAcncRegistered"> True if registered with the ACNC.  False if not. Absent or null if not confirmed. </param>
        /// <param name="industryCode"> A valid [ANZSIC](http://www.abs.gov.au/ANZSIC) code for the organisation. If the industry code held by the data holder is not one of the supported [ANZSIC](http://www.abs.gov.au/ANZSIC) versions, then it must not be supplied. </param>
        /// <param name="industryCodeVersion"> The applicable [ANZSIC](http://www.abs.gov.au/ANZSIC) release version of the industry code provided. Should only be supplied if ``industryCode`` is also supplied. If ``industryCode`` is supplied but ``industryCodeVersion`` is absent, default is ``ANZSIC_1292.0_2006_V2.0``. </param>
        /// <param name="organisationType"> Legal organisation type. </param>
        /// <param name="registeredCountry"> Enumeration with values from [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country codes.  Assumed to be AUS if absent. </param>
        /// <param name="establishmentDate"> The date the organisation described was established. </param>
        /// <param name="physicalAddresses"> Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail. </param>
        internal CommonOrganisationDetailV2(string lastUpdateTime, string agentFirstName, string agentLastName, string agentRole, string businessName, string legalName, string shortName, string abn, string acn, bool? isAcncRegistered, string industryCode, CommonOrganisationIndustryCodeVersion? industryCodeVersion, CommonOrganisationType organisationType, string registeredCountry, string establishmentDate, IReadOnlyList<CommonPhysicalAddressWithPurpose2> physicalAddresses) : base(lastUpdateTime, agentFirstName, agentLastName, agentRole, businessName, legalName, shortName, abn, acn, isAcncRegistered, industryCode, industryCodeVersion, organisationType, registeredCountry, establishmentDate)
        {
            PhysicalAddresses = physicalAddresses;
        }

        /// <summary> Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail. </summary>
        public IReadOnlyList<CommonPhysicalAddressWithPurpose2> PhysicalAddresses { get; }
    }
}
