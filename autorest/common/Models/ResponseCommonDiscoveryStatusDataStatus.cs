// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Agl.Cdr.Common
{
    /// <summary> Enumeration with values. OK (implementation is fully functional). PARTIAL_FAILURE (one or more end points are unexpectedly unavailable). UNAVAILABLE (the full implementation is unexpectedly unavailable). SCHEDULED_OUTAGE (an advertised outage is in effect). </summary>
    public readonly partial struct ResponseCommonDiscoveryStatusDataStatus : IEquatable<ResponseCommonDiscoveryStatusDataStatus>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ResponseCommonDiscoveryStatusDataStatus"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ResponseCommonDiscoveryStatusDataStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string OKValue = "OK";
        private const string PartialFailureValue = "PARTIAL_FAILURE";
        private const string ScheduledOutageValue = "SCHEDULED_OUTAGE";
        private const string UnavailableValue = "UNAVAILABLE";

        /// <summary> OK. </summary>
        public static ResponseCommonDiscoveryStatusDataStatus OK { get; } = new ResponseCommonDiscoveryStatusDataStatus(OKValue);
        /// <summary> PARTIAL_FAILURE. </summary>
        public static ResponseCommonDiscoveryStatusDataStatus PartialFailure { get; } = new ResponseCommonDiscoveryStatusDataStatus(PartialFailureValue);
        /// <summary> SCHEDULED_OUTAGE. </summary>
        public static ResponseCommonDiscoveryStatusDataStatus ScheduledOutage { get; } = new ResponseCommonDiscoveryStatusDataStatus(ScheduledOutageValue);
        /// <summary> UNAVAILABLE. </summary>
        public static ResponseCommonDiscoveryStatusDataStatus Unavailable { get; } = new ResponseCommonDiscoveryStatusDataStatus(UnavailableValue);
        /// <summary> Determines if two <see cref="ResponseCommonDiscoveryStatusDataStatus"/> values are the same. </summary>
        public static bool operator ==(ResponseCommonDiscoveryStatusDataStatus left, ResponseCommonDiscoveryStatusDataStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ResponseCommonDiscoveryStatusDataStatus"/> values are not the same. </summary>
        public static bool operator !=(ResponseCommonDiscoveryStatusDataStatus left, ResponseCommonDiscoveryStatusDataStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ResponseCommonDiscoveryStatusDataStatus"/>. </summary>
        public static implicit operator ResponseCommonDiscoveryStatusDataStatus(string value) => new ResponseCommonDiscoveryStatusDataStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ResponseCommonDiscoveryStatusDataStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ResponseCommonDiscoveryStatusDataStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
