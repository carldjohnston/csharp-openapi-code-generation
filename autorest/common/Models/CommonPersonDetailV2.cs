// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Agl.Cdr.Common;

namespace Agl.Cdr.Common.Models
{
    /// <summary> The CommonPersonDetailV2. </summary>
    public partial class CommonPersonDetailV2 : CommonPerson
    {
        /// <summary> Initializes a new instance of CommonPersonDetailV2. </summary>
        /// <param name="lastName"> For people with single names the single name should be in this field. </param>
        /// <param name="middleNames"> Field is mandatory but array may be empty. </param>
        /// <param name="phoneNumbers"> Array is mandatory but may be empty if no phone numbers are held. </param>
        /// <param name="emailAddresses"> May be empty. </param>
        /// <param name="physicalAddresses"> Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="lastName"/>, <paramref name="middleNames"/>, <paramref name="phoneNumbers"/>, <paramref name="emailAddresses"/>, or <paramref name="physicalAddresses"/> is null. </exception>
        internal CommonPersonDetailV2(string lastName, List<string> middleNames, List<CommonPhoneNumber> phoneNumbers, List<CommonEmailAddress> emailAddresses, List<CommonPhysicalAddressWithPurpose1> physicalAddresses) : base(lastName, middleNames)
        {
            if (lastName == null)
            {
                throw new ArgumentNullException(nameof(lastName));
            }
            if (middleNames == null)
            {
                throw new ArgumentNullException(nameof(middleNames));
            }
            if (phoneNumbers == null)
            {
                throw new ArgumentNullException(nameof(phoneNumbers));
            }
            if (emailAddresses == null)
            {
                throw new ArgumentNullException(nameof(emailAddresses));
            }
            if (physicalAddresses == null)
            {
                throw new ArgumentNullException(nameof(physicalAddresses));
            }

            PhoneNumbers = phoneNumbers;
            EmailAddresses = emailAddresses;
            PhysicalAddresses = physicalAddresses;
        }

        /// <summary> Initializes a new instance of CommonPersonDetailV2. </summary>
        /// <param name="lastUpdateTime"> The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data. </param>
        /// <param name="firstName"> For people with single names this field need not be present. The single name should be in the lastName field. Where a data holder cannot determine first and middle names from a collection of given names, a single string representing all given names MAY be provided. </param>
        /// <param name="lastName"> For people with single names the single name should be in this field. </param>
        /// <param name="middleNames"> Field is mandatory but array may be empty. </param>
        /// <param name="prefix"> Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc). </param>
        /// <param name="suffix"> Used for a trailing suffix to the name (e.g. Jr). </param>
        /// <param name="occupationCode"> Value is a valid [ANZSCO](http://www.abs.gov.au/ANZSCO) Standard Occupation classification code. If the occupation code held by the data holder is not one of the supported [ANZSCO](http://www.abs.gov.au/ANZSCO) versions, then it must not be supplied. </param>
        /// <param name="occupationCodeVersion"> The applicable [ANZSCO](http://www.abs.gov.au/ANZSCO) release version of the occupation code provided. Mandatory if an ``occupationCode`` is supplied. If ``occupationCode`` is supplied but ``occupationCodeVersion`` is absent, default is ``ANZSCO_1220.0_2013_V1.2``. </param>
        /// <param name="phoneNumbers"> Array is mandatory but may be empty if no phone numbers are held. </param>
        /// <param name="emailAddresses"> May be empty. </param>
        /// <param name="physicalAddresses"> Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail. </param>
        internal CommonPersonDetailV2(string lastUpdateTime, string firstName, string lastName, IReadOnlyList<string> middleNames, string prefix, string suffix, string occupationCode, CommonPersonOccupationCodeVersion? occupationCodeVersion, IReadOnlyList<CommonPhoneNumber> phoneNumbers, IReadOnlyList<CommonEmailAddress> emailAddresses, IReadOnlyList<CommonPhysicalAddressWithPurpose1> physicalAddresses) : base(lastUpdateTime, firstName, lastName, middleNames, prefix, suffix, occupationCode, occupationCodeVersion)
        {
            PhoneNumbers = phoneNumbers;
            EmailAddresses = emailAddresses;
            PhysicalAddresses = physicalAddresses;
        }

        /// <summary> Array is mandatory but may be empty if no phone numbers are held. </summary>
        public IReadOnlyList<CommonPhoneNumber> PhoneNumbers { get; }
        /// <summary> May be empty. </summary>
        public IReadOnlyList<CommonEmailAddress> EmailAddresses { get; }
        /// <summary> Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail. </summary>
        public IReadOnlyList<CommonPhysicalAddressWithPurpose1> PhysicalAddresses { get; }
    }
}
