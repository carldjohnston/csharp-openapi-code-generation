// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Extensions.Logging;

namespace Agl.Cdr.Admin
{
    public class AdminApi
    {
        private ILogger<AdminApi> _logger;

        /// <summary> Initializes a new instance of AdminApi. </summary>
        /// <param name="logger"> Class logger. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="logger"/> is null. </exception>
        public AdminApi(ILogger<AdminApi> logger)
        {
            if (logger == null)
            {
                throw new ArgumentNullException(nameof(logger));
            }

            _logger = logger;
        }

        /// <summary> Indicate that a critical update to the metadata for Accredited Data Recipients has been made and should be obtained. </summary>
        /// <param name="req"> Raw HTTP Request. </param>
        /// <param name="cancellationToken"> The cancellation token provided on Function shutdown. </param>
        [FunctionName("MetadataUpdateAsync_post")]
        public async Task<IActionResult> MetadataUpdateAsync([HttpTrigger(AuthorizationLevel.Anonymous, "post", Route = "admin/register/metadata")] HttpRequest req, CancellationToken cancellationToken = default)
        {
            _logger.LogInformation("HTTP trigger function processed a request.");

            // TODO: Handle Documented Responses.
            // Spec Defines: HTTP 200

            throw new NotImplementedException();
        }

        /// <summary>
        /// This end point allows the ACCC to obtain operational statistics from the Data Holder on the operation of their CDR compliant implementation. The statistics obtainable from this end point are determined by the non-functional requirements for the CDR regime.
        /// 
        /// NOTE: This version must be implemented by **October 1st 2022**
        /// 
        /// Obsolete versions: [v1](includes/obsolete/get-metrics-v1.html) [v2](includes/obsolete/get-metrics-v2.html).
        /// 
        /// If the Data Holder supports private_key_jwt client authentication they MUST validate the scope.
        /// </summary>
        /// <param name="req"> Raw HTTP Request. </param>
        /// <param name="cancellationToken"> The cancellation token provided on Function shutdown. </param>
        [FunctionName("GetMetricsAsync_get")]
        public async Task<IActionResult> GetMetricsAsync([HttpTrigger(AuthorizationLevel.Anonymous, "get", Route = "admin/metrics")] HttpRequest req, CancellationToken cancellationToken = default)
        {
            _logger.LogInformation("HTTP trigger function processed a request.");

            // TODO: Handle Documented Responses.
            // Spec Defines: HTTP 200

            throw new NotImplementedException();
        }
    }
}
