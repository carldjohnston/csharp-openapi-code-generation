// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Agl.Cdr.Common.Models
{
    /// <summary> The ResponseMetricsListV3Data. </summary>
    public partial class ResponseMetricsListV3Data
    {
        /// <summary> Initializes a new instance of ResponseMetricsListV3Data. </summary>
        /// <param name="requestTime"> The date and time that the metrics in this payload were requested. </param>
        /// <param name="availability"> Percentage availability of the CDR platform over time. </param>
        /// <param name="performance"> Percentage of calls within the performance thresholds. </param>
        /// <param name="invocations"> Number of API calls in each performance tier over time. </param>
        /// <param name="averageResponse"> Average response time in seconds, at millisecond resolution, within each performance tier. </param>
        /// <param name="sessionCount"> Session counts over time. Note that a session is defined as the provisioning of an Access Token. </param>
        /// <param name="averageTps"> Transactions per second over time. </param>
        /// <param name="peakTps"> Maximum record transactions per second over time. </param>
        /// <param name="errors"> Number of calls resulting in error due to server execution over time. </param>
        /// <param name="rejections"> Number of calls rejected due to traffic thresholds over time. </param>
        /// <param name="customerCount"> Number of customers with active authorisations at the time of the call. </param>
        /// <param name="recipientCount"> Number of Data Recipient Software Products with active authorisations at the time of the call. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="requestTime"/>, <paramref name="availability"/>, <paramref name="performance"/>, <paramref name="invocations"/>, <paramref name="averageResponse"/>, <paramref name="sessionCount"/>, <paramref name="averageTps"/>, <paramref name="peakTps"/>, <paramref name="errors"/>, or <paramref name="rejections"/> is null. </exception>
        internal ResponseMetricsListV3Data(string requestTime, AvailabilityMetrics availability, PerformanceMetrics performance, InvocationMetricsV2 invocations, AverageResponseMetricsV2 averageResponse, SessionCountMetrics sessionCount, AverageTPSMetrics averageTps, PeakTPSMetrics peakTps, ErrorMetrics errors, RejectionMetricsV2 rejections, int customerCount, int recipientCount)
        {
            if (requestTime == null)
            {
                throw new ArgumentNullException(nameof(requestTime));
            }
            if (availability == null)
            {
                throw new ArgumentNullException(nameof(availability));
            }
            if (performance == null)
            {
                throw new ArgumentNullException(nameof(performance));
            }
            if (invocations == null)
            {
                throw new ArgumentNullException(nameof(invocations));
            }
            if (averageResponse == null)
            {
                throw new ArgumentNullException(nameof(averageResponse));
            }
            if (sessionCount == null)
            {
                throw new ArgumentNullException(nameof(sessionCount));
            }
            if (averageTps == null)
            {
                throw new ArgumentNullException(nameof(averageTps));
            }
            if (peakTps == null)
            {
                throw new ArgumentNullException(nameof(peakTps));
            }
            if (errors == null)
            {
                throw new ArgumentNullException(nameof(errors));
            }
            if (rejections == null)
            {
                throw new ArgumentNullException(nameof(rejections));
            }

            RequestTime = requestTime;
            Availability = availability;
            Performance = performance;
            Invocations = invocations;
            AverageResponse = averageResponse;
            SessionCount = sessionCount;
            AverageTps = averageTps;
            PeakTps = peakTps;
            Errors = errors;
            Rejections = rejections;
            CustomerCount = customerCount;
            RecipientCount = recipientCount;
        }

        /// <summary> Initializes a new instance of ResponseMetricsListV3Data. </summary>
        /// <param name="requestTime"> The date and time that the metrics in this payload were requested. </param>
        /// <param name="availability"> Percentage availability of the CDR platform over time. </param>
        /// <param name="performance"> Percentage of calls within the performance thresholds. </param>
        /// <param name="invocations"> Number of API calls in each performance tier over time. </param>
        /// <param name="averageResponse"> Average response time in seconds, at millisecond resolution, within each performance tier. </param>
        /// <param name="sessionCount"> Session counts over time. Note that a session is defined as the provisioning of an Access Token. </param>
        /// <param name="averageTps"> Transactions per second over time. </param>
        /// <param name="peakTps"> Maximum record transactions per second over time. </param>
        /// <param name="errors"> Number of calls resulting in error due to server execution over time. </param>
        /// <param name="rejections"> Number of calls rejected due to traffic thresholds over time. </param>
        /// <param name="customerCount"> Number of customers with active authorisations at the time of the call. </param>
        /// <param name="recipientCount"> Number of Data Recipient Software Products with active authorisations at the time of the call. </param>
        /// <param name="secondaryHolder"> Errors and rejections received by the primary data holder from the secondary data holder.  Mandatory for data holders designated for a Shared Responsibility Data Request data cluster. </param>
        internal ResponseMetricsListV3Data(string requestTime, AvailabilityMetrics availability, PerformanceMetrics performance, InvocationMetricsV2 invocations, AverageResponseMetricsV2 averageResponse, SessionCountMetrics sessionCount, AverageTPSMetrics averageTps, PeakTPSMetrics peakTps, ErrorMetrics errors, RejectionMetricsV2 rejections, int customerCount, int recipientCount, SecondaryHolderMetrics secondaryHolder)
        {
            RequestTime = requestTime;
            Availability = availability;
            Performance = performance;
            Invocations = invocations;
            AverageResponse = averageResponse;
            SessionCount = sessionCount;
            AverageTps = averageTps;
            PeakTps = peakTps;
            Errors = errors;
            Rejections = rejections;
            CustomerCount = customerCount;
            RecipientCount = recipientCount;
            SecondaryHolder = secondaryHolder;
        }

        /// <summary> The date and time that the metrics in this payload were requested. </summary>
        public string RequestTime { get; }
        /// <summary> Percentage availability of the CDR platform over time. </summary>
        public AvailabilityMetrics Availability { get; }
        /// <summary> Percentage of calls within the performance thresholds. </summary>
        public PerformanceMetrics Performance { get; }
        /// <summary> Number of API calls in each performance tier over time. </summary>
        public InvocationMetricsV2 Invocations { get; }
        /// <summary> Average response time in seconds, at millisecond resolution, within each performance tier. </summary>
        public AverageResponseMetricsV2 AverageResponse { get; }
        /// <summary> Session counts over time. Note that a session is defined as the provisioning of an Access Token. </summary>
        public SessionCountMetrics SessionCount { get; }
        /// <summary> Transactions per second over time. </summary>
        public AverageTPSMetrics AverageTps { get; }
        /// <summary> Maximum record transactions per second over time. </summary>
        public PeakTPSMetrics PeakTps { get; }
        /// <summary> Number of calls resulting in error due to server execution over time. </summary>
        public ErrorMetrics Errors { get; }
        /// <summary> Number of calls rejected due to traffic thresholds over time. </summary>
        public RejectionMetricsV2 Rejections { get; }
        /// <summary> Number of customers with active authorisations at the time of the call. </summary>
        public int CustomerCount { get; }
        /// <summary> Number of Data Recipient Software Products with active authorisations at the time of the call. </summary>
        public int RecipientCount { get; }
        /// <summary> Errors and rejections received by the primary data holder from the secondary data holder.  Mandatory for data holders designated for a Shared Responsibility Data Request data cluster. </summary>
        public SecondaryHolderMetrics SecondaryHolder { get; }
    }
}
