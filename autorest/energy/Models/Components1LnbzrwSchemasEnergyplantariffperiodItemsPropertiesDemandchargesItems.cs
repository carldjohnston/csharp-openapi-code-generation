// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Agl.Cdr.Energy;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> The Components1LnbzrwSchemasEnergyplantariffperiodItemsPropertiesDemandchargesItems. </summary>
    public partial class Components1LnbzrwSchemasEnergyplantariffperiodItemsPropertiesDemandchargesItems
    {
        /// <summary> Initializes a new instance of Components1LnbzrwSchemasEnergyplantariffperiodItemsPropertiesDemandchargesItems. </summary>
        /// <param name="displayName"> Display name of the charge. </param>
        /// <param name="amount"> The charge amount per  measure unit exclusive of GST. </param>
        /// <param name="startTime"> Start of the period in HHMM format using 24 hour clock format. </param>
        /// <param name="endTime"> End of the period in HHMM format using 24 hour clock format. </param>
        /// <param name="measurementPeriod"> Application period for the demand tariff. </param>
        /// <param name="chargePeriod"> Charge period for the demand tariff. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/>, <paramref name="amount"/>, <paramref name="startTime"/>, or <paramref name="endTime"/> is null. </exception>
        internal Components1LnbzrwSchemasEnergyplantariffperiodItemsPropertiesDemandchargesItems(string displayName, string amount, string startTime, string endTime, EnergyPlanTariffPeriodItemDemandChargesItemMeasurementPeriod measurementPeriod, EnergyPlanTariffPeriodItemDemandChargesItemChargePeriod chargePeriod)
        {
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }
            if (amount == null)
            {
                throw new ArgumentNullException(nameof(amount));
            }
            if (startTime == null)
            {
                throw new ArgumentNullException(nameof(startTime));
            }
            if (endTime == null)
            {
                throw new ArgumentNullException(nameof(endTime));
            }

            DisplayName = displayName;
            Amount = amount;
            StartTime = startTime;
            EndTime = endTime;
            MeasurementPeriod = measurementPeriod;
            ChargePeriod = chargePeriod;
        }

        /// <summary> Initializes a new instance of Components1LnbzrwSchemasEnergyplantariffperiodItemsPropertiesDemandchargesItems. </summary>
        /// <param name="displayName"> Display name of the charge. </param>
        /// <param name="description"> Description of the charge. </param>
        /// <param name="amount"> The charge amount per  measure unit exclusive of GST. </param>
        /// <param name="measureUnit"> The measurement unit of charge amount. Assumed to be KWH if absent. </param>
        /// <param name="startTime"> Start of the period in HHMM format using 24 hour clock format. </param>
        /// <param name="endTime"> End of the period in HHMM format using 24 hour clock format. </param>
        /// <param name="days"> Object containing demand tariff by day of week. </param>
        /// <param name="minDemand"> Minimum demand for this demand tariff in kW.  If absent then 0 is assumed. </param>
        /// <param name="maxDemand"> Maximum demand for this demand tariff in kW.  If present, must be higher than the value of the minDemand field. </param>
        /// <param name="measurementPeriod"> Application period for the demand tariff. </param>
        /// <param name="chargePeriod"> Charge period for the demand tariff. </param>
        internal Components1LnbzrwSchemasEnergyplantariffperiodItemsPropertiesDemandchargesItems(string displayName, string description, string amount, EnergyPlanTariffPeriodItemDemandChargesItemMeasureUnit? measureUnit, string startTime, string endTime, EnergyPlanTariffPeriodItemDemandChargesItemDays days, string minDemand, string maxDemand, EnergyPlanTariffPeriodItemDemandChargesItemMeasurementPeriod measurementPeriod, EnergyPlanTariffPeriodItemDemandChargesItemChargePeriod chargePeriod)
        {
            DisplayName = displayName;
            Description = description;
            Amount = amount;
            MeasureUnit = measureUnit;
            StartTime = startTime;
            EndTime = endTime;
            Days = days;
            MinDemand = minDemand;
            MaxDemand = maxDemand;
            MeasurementPeriod = measurementPeriod;
            ChargePeriod = chargePeriod;
        }

        /// <summary> Display name of the charge. </summary>
        public string DisplayName { get; }
        /// <summary> Description of the charge. </summary>
        public string Description { get; }
        /// <summary> The charge amount per  measure unit exclusive of GST. </summary>
        public string Amount { get; }
        /// <summary> The measurement unit of charge amount. Assumed to be KWH if absent. </summary>
        public EnergyPlanTariffPeriodItemDemandChargesItemMeasureUnit? MeasureUnit { get; }
        /// <summary> Start of the period in HHMM format using 24 hour clock format. </summary>
        public string StartTime { get; }
        /// <summary> End of the period in HHMM format using 24 hour clock format. </summary>
        public string EndTime { get; }
        /// <summary> Object containing demand tariff by day of week. </summary>
        public EnergyPlanTariffPeriodItemDemandChargesItemDays Days { get; }
        /// <summary> Minimum demand for this demand tariff in kW.  If absent then 0 is assumed. </summary>
        public string MinDemand { get; }
        /// <summary> Maximum demand for this demand tariff in kW.  If present, must be higher than the value of the minDemand field. </summary>
        public string MaxDemand { get; }
        /// <summary> Application period for the demand tariff. </summary>
        public EnergyPlanTariffPeriodItemDemandChargesItemMeasurementPeriod MeasurementPeriod { get; }
        /// <summary> Charge period for the demand tariff. </summary>
        public EnergyPlanTariffPeriodItemDemandChargesItemChargePeriod ChargePeriod { get; }
    }
}
