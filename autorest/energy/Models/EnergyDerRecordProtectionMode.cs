// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Agl.Cdr.Energy.Models
{
    /// <summary> Required only when the hasCentralProtectionAndControl flag is set to true.  One or more of the object fields will be provided to describe the protection modes in place. </summary>
    public partial class EnergyDerRecordProtectionMode
    {
        /// <summary> Initializes a new instance of EnergyDerRecordProtectionMode. </summary>
        internal EnergyDerRecordProtectionMode()
        {
        }

        /// <summary> Initializes a new instance of EnergyDerRecordProtectionMode. </summary>
        /// <param name="exportLimitkva"> Maximum amount of power (kVA) that may be exported from a connection point to the grid, as monitored by a control / relay function. An absent value indicates no limit. </param>
        /// <param name="underFrequencyProtection"> Protective function limit in Hz. </param>
        /// <param name="underFrequencyProtectionDelay"> Trip delay time in seconds. </param>
        /// <param name="overFrequencyProtection"> Protective function limit in Hz. </param>
        /// <param name="overFrequencyProtectionDelay"> Trip delay time in seconds. </param>
        /// <param name="underVoltageProtection"> Protective function limit in V. </param>
        /// <param name="underVoltageProtectionDelay"> Trip delay time in seconds. </param>
        /// <param name="overVoltageProtection"> Protective function limit in V. </param>
        /// <param name="overVoltageProtectionDelay"> Trip delay time in seconds. </param>
        /// <param name="sustainedOverVoltage"> Sustained over voltage. </param>
        /// <param name="sustainedOverVoltageDelay"> Trip delay time in seconds. </param>
        /// <param name="frequencyRateOfChange"> Rate of change of frequency trip point (Hz/s). </param>
        /// <param name="voltageVectorShift"> Trip angle in degrees. </param>
        /// <param name="interTripScheme"> Description of the form of inter-trip (e.g. &apos;from local substation&apos;). </param>
        /// <param name="neutralVoltageDisplacement"> Trip voltage. </param>
        internal EnergyDerRecordProtectionMode(float? exportLimitkva, float? underFrequencyProtection, float? underFrequencyProtectionDelay, float? overFrequencyProtection, float? overFrequencyProtectionDelay, float? underVoltageProtection, float? underVoltageProtectionDelay, float? overVoltageProtection, float? overVoltageProtectionDelay, float? sustainedOverVoltage, float? sustainedOverVoltageDelay, float? frequencyRateOfChange, float? voltageVectorShift, string interTripScheme, float? neutralVoltageDisplacement)
        {
            ExportLimitkva = exportLimitkva;
            UnderFrequencyProtection = underFrequencyProtection;
            UnderFrequencyProtectionDelay = underFrequencyProtectionDelay;
            OverFrequencyProtection = overFrequencyProtection;
            OverFrequencyProtectionDelay = overFrequencyProtectionDelay;
            UnderVoltageProtection = underVoltageProtection;
            UnderVoltageProtectionDelay = underVoltageProtectionDelay;
            OverVoltageProtection = overVoltageProtection;
            OverVoltageProtectionDelay = overVoltageProtectionDelay;
            SustainedOverVoltage = sustainedOverVoltage;
            SustainedOverVoltageDelay = sustainedOverVoltageDelay;
            FrequencyRateOfChange = frequencyRateOfChange;
            VoltageVectorShift = voltageVectorShift;
            InterTripScheme = interTripScheme;
            NeutralVoltageDisplacement = neutralVoltageDisplacement;
        }

        /// <summary> Maximum amount of power (kVA) that may be exported from a connection point to the grid, as monitored by a control / relay function. An absent value indicates no limit. </summary>
        public float? ExportLimitkva { get; }
        /// <summary> Protective function limit in Hz. </summary>
        public float? UnderFrequencyProtection { get; }
        /// <summary> Trip delay time in seconds. </summary>
        public float? UnderFrequencyProtectionDelay { get; }
        /// <summary> Protective function limit in Hz. </summary>
        public float? OverFrequencyProtection { get; }
        /// <summary> Trip delay time in seconds. </summary>
        public float? OverFrequencyProtectionDelay { get; }
        /// <summary> Protective function limit in V. </summary>
        public float? UnderVoltageProtection { get; }
        /// <summary> Trip delay time in seconds. </summary>
        public float? UnderVoltageProtectionDelay { get; }
        /// <summary> Protective function limit in V. </summary>
        public float? OverVoltageProtection { get; }
        /// <summary> Trip delay time in seconds. </summary>
        public float? OverVoltageProtectionDelay { get; }
        /// <summary> Sustained over voltage. </summary>
        public float? SustainedOverVoltage { get; }
        /// <summary> Trip delay time in seconds. </summary>
        public float? SustainedOverVoltageDelay { get; }
        /// <summary> Rate of change of frequency trip point (Hz/s). </summary>
        public float? FrequencyRateOfChange { get; }
        /// <summary> Trip angle in degrees. </summary>
        public float? VoltageVectorShift { get; }
        /// <summary> Description of the form of inter-trip (e.g. &apos;from local substation&apos;). </summary>
        public string InterTripScheme { get; }
        /// <summary> Trip voltage. </summary>
        public float? NeutralVoltageDisplacement { get; }
    }
}
