// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Agl.Cdr.Energy;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> Detail on the plan applicable to this account. </summary>
    public partial class EnergyAccountDetailAllOfPlanDetail
    {
        /// <summary> Initializes a new instance of EnergyAccountDetailAllOfPlanDetail. </summary>
        /// <param name="fuelType"> The fuel types covered by the plan. </param>
        internal EnergyAccountDetailAllOfPlanDetail(EnergyAccountDetailAllOfPlanDetailFuelType fuelType)
        {
            FuelType = fuelType;
            MeteringCharges = new List<EnergyPlanDetailAllOfMeteringCharges>();
        }

        /// <summary> Initializes a new instance of EnergyAccountDetailAllOfPlanDetail. </summary>
        /// <param name="fuelType"> The fuel types covered by the plan. </param>
        /// <param name="isContingentPlan"> Flag that indicates that the plan is contingent on the customer taking up an alternate fuel plan from the same retailer (for instance, if the fuelType is ELECTRICITY then a GAS plan from the same retailer must be taken up). Has no meaning if the plan has a fuelType of DUAL. If absent the value is assumed to be false. </param>
        /// <param name="meteringCharges"> Charges for metering included in the plan. </param>
        /// <param name="gasContract"> . </param>
        /// <param name="electricityContract"> . </param>
        internal EnergyAccountDetailAllOfPlanDetail(EnergyAccountDetailAllOfPlanDetailFuelType fuelType, bool? isContingentPlan, IReadOnlyList<EnergyPlanDetailAllOfMeteringCharges> meteringCharges, EnergyPlanContract gasContract, EnergyPlanContract electricityContract)
        {
            FuelType = fuelType;
            IsContingentPlan = isContingentPlan;
            MeteringCharges = meteringCharges;
            GasContract = gasContract;
            ElectricityContract = electricityContract;
        }

        /// <summary> The fuel types covered by the plan. </summary>
        public EnergyAccountDetailAllOfPlanDetailFuelType FuelType { get; }
        /// <summary> Flag that indicates that the plan is contingent on the customer taking up an alternate fuel plan from the same retailer (for instance, if the fuelType is ELECTRICITY then a GAS plan from the same retailer must be taken up). Has no meaning if the plan has a fuelType of DUAL. If absent the value is assumed to be false. </summary>
        public bool? IsContingentPlan { get; }
        /// <summary> Charges for metering included in the plan. </summary>
        public IReadOnlyList<EnergyPlanDetailAllOfMeteringCharges> MeteringCharges { get; }
        public EnergyPlanContract GasContract { get; }
        public EnergyPlanContract ElectricityContract { get; }
    }
}
