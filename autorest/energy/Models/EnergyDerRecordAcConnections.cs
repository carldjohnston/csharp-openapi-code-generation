// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Agl.Cdr.Energy;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> The EnergyDerRecordAcConnections. </summary>
    public partial class EnergyDerRecordAcConnections
    {
        /// <summary> Initializes a new instance of EnergyDerRecordAcConnections. </summary>
        /// <param name="connectionIdentifier"> AC Connection ID as defined in the DER register.  Does not align with CDR ID permanence standards. </param>
        /// <param name="count"> Number of AC Connections in the group. For the suite of AC Connections to be considered as a group, all of the AC Connections included must have the same attributes. </param>
        /// <param name="commissioningDate"> The date that the DER installation is commissioned. </param>
        /// <param name="status"> Code used to indicate the status of the Inverter. This will be used to identify if an inverter is active or inactive or decommissioned. </param>
        /// <param name="derDevices"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="count"/>, <paramref name="commissioningDate"/>, or <paramref name="derDevices"/> is null. </exception>
        internal EnergyDerRecordAcConnections(float connectionIdentifier, string count, string commissioningDate, EnergyDerRecordAcConnectionsStatus status, List<EnergyDerRecordDerDevices> derDevices)
        {
            if (count == null)
            {
                throw new ArgumentNullException(nameof(count));
            }
            if (commissioningDate == null)
            {
                throw new ArgumentNullException(nameof(commissioningDate));
            }
            if (derDevices == null)
            {
                throw new ArgumentNullException(nameof(derDevices));
            }

            ConnectionIdentifier = connectionIdentifier;
            Count = count;
            CommissioningDate = commissioningDate;
            Status = status;
            DerDevices = derDevices;
        }

        /// <summary> Initializes a new instance of EnergyDerRecordAcConnections. </summary>
        /// <param name="connectionIdentifier"> AC Connection ID as defined in the DER register.  Does not align with CDR ID permanence standards. </param>
        /// <param name="count"> Number of AC Connections in the group. For the suite of AC Connections to be considered as a group, all of the AC Connections included must have the same attributes. </param>
        /// <param name="equipmentType"> Indicates whether the DER device is connected via an inverter (and what category of inverter it is) or not (e.g. rotating machine). If absent, assume equipment type to be “OTHER”. </param>
        /// <param name="manufacturerName"> The name of the inverter manufacturer. Mandatory if equipmentType is INVERTER. </param>
        /// <param name="inverterSeries"> The inverter series. Mandatory if equipmentType is INVERTER. </param>
        /// <param name="inverterModelNumber"> The inverter model number. Mandatory if equipmentType is INVERTER. </param>
        /// <param name="commissioningDate"> The date that the DER installation is commissioned. </param>
        /// <param name="status"> Code used to indicate the status of the Inverter. This will be used to identify if an inverter is active or inactive or decommissioned. </param>
        /// <param name="inverterDeviceCapacity"> The rated AC output power that is listed in the product specified by the manufacturer. Mandatory if equipmentType is INVERTER. </param>
        /// <param name="derDevices"> . </param>
        internal EnergyDerRecordAcConnections(float connectionIdentifier, string count, EnergyDerRecordAcConnectionsEquipmentType? equipmentType, string manufacturerName, string inverterSeries, string inverterModelNumber, string commissioningDate, EnergyDerRecordAcConnectionsStatus status, float? inverterDeviceCapacity, IReadOnlyList<EnergyDerRecordDerDevices> derDevices)
        {
            ConnectionIdentifier = connectionIdentifier;
            Count = count;
            EquipmentType = equipmentType;
            ManufacturerName = manufacturerName;
            InverterSeries = inverterSeries;
            InverterModelNumber = inverterModelNumber;
            CommissioningDate = commissioningDate;
            Status = status;
            InverterDeviceCapacity = inverterDeviceCapacity;
            DerDevices = derDevices;
        }

        /// <summary> AC Connection ID as defined in the DER register.  Does not align with CDR ID permanence standards. </summary>
        public float ConnectionIdentifier { get; }
        /// <summary> Number of AC Connections in the group. For the suite of AC Connections to be considered as a group, all of the AC Connections included must have the same attributes. </summary>
        public string Count { get; }
        /// <summary> Indicates whether the DER device is connected via an inverter (and what category of inverter it is) or not (e.g. rotating machine). If absent, assume equipment type to be “OTHER”. </summary>
        public EnergyDerRecordAcConnectionsEquipmentType? EquipmentType { get; }
        /// <summary> The name of the inverter manufacturer. Mandatory if equipmentType is INVERTER. </summary>
        public string ManufacturerName { get; }
        /// <summary> The inverter series. Mandatory if equipmentType is INVERTER. </summary>
        public string InverterSeries { get; }
        /// <summary> The inverter model number. Mandatory if equipmentType is INVERTER. </summary>
        public string InverterModelNumber { get; }
        /// <summary> The date that the DER installation is commissioned. </summary>
        public string CommissioningDate { get; }
        /// <summary> Code used to indicate the status of the Inverter. This will be used to identify if an inverter is active or inactive or decommissioned. </summary>
        public EnergyDerRecordAcConnectionsStatus Status { get; }
        /// <summary> The rated AC output power that is listed in the product specified by the manufacturer. Mandatory if equipmentType is INVERTER. </summary>
        public float? InverterDeviceCapacity { get; }
        public IReadOnlyList<EnergyDerRecordDerDevices> DerDevices { get; }
    }
}
