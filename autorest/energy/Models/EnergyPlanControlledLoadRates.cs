// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> The EnergyPlanControlledLoadRates. </summary>
    public partial class EnergyPlanControlledLoadRates
    {
        /// <summary> Initializes a new instance of EnergyPlanControlledLoadRates. </summary>
        /// <param name="unitPrice"> Unit price of usage per kWh (exclusive of GST). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="unitPrice"/> is null. </exception>
        internal EnergyPlanControlledLoadRates(string unitPrice)
        {
            if (unitPrice == null)
            {
                throw new ArgumentNullException(nameof(unitPrice));
            }

            UnitPrice = unitPrice;
        }

        /// <summary> Initializes a new instance of EnergyPlanControlledLoadRates. </summary>
        /// <param name="unitPrice"> Unit price of usage per kWh (exclusive of GST). </param>
        /// <param name="volume"> Volume in kWh that this rate applies to.  Only applicable for ‘stepped’ rates where different rates apply for different volumes of usage in a period. </param>
        internal EnergyPlanControlledLoadRates(string unitPrice, float? volume)
        {
            UnitPrice = unitPrice;
            Volume = volume;
        }

        /// <summary> Unit price of usage per kWh (exclusive of GST). </summary>
        public string UnitPrice { get; }
        /// <summary> Volume in kWh that this rate applies to.  Only applicable for ‘stepped’ rates where different rates apply for different volumes of usage in a period. </summary>
        public float? Volume { get; }
    }
}
