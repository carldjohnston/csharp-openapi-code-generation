// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Agl.Cdr.Energy
{
    /// <summary> A code that defines the consumer class as defined in the National Energy Retail Regulations, or in overriding Jurisdictional instruments. </summary>
    public readonly partial struct EnergyServicePointConsumerProfileClassification : IEquatable<EnergyServicePointConsumerProfileClassification>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="EnergyServicePointConsumerProfileClassification"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EnergyServicePointConsumerProfileClassification(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string BusinessValue = "BUSINESS";
        private const string ResidentialValue = "RESIDENTIAL";

        /// <summary> BUSINESS. </summary>
        public static EnergyServicePointConsumerProfileClassification Business { get; } = new EnergyServicePointConsumerProfileClassification(BusinessValue);
        /// <summary> RESIDENTIAL. </summary>
        public static EnergyServicePointConsumerProfileClassification Residential { get; } = new EnergyServicePointConsumerProfileClassification(ResidentialValue);
        /// <summary> Determines if two <see cref="EnergyServicePointConsumerProfileClassification"/> values are the same. </summary>
        public static bool operator ==(EnergyServicePointConsumerProfileClassification left, EnergyServicePointConsumerProfileClassification right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EnergyServicePointConsumerProfileClassification"/> values are not the same. </summary>
        public static bool operator !=(EnergyServicePointConsumerProfileClassification left, EnergyServicePointConsumerProfileClassification right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EnergyServicePointConsumerProfileClassification"/>. </summary>
        public static implicit operator EnergyServicePointConsumerProfileClassification(string value) => new EnergyServicePointConsumerProfileClassification(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EnergyServicePointConsumerProfileClassification other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EnergyServicePointConsumerProfileClassification other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
