// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Agl.Cdr.Energy;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> Represents a regular credit card payment schedule. Mandatory if paymentScheduleUType is set to cardDebit. </summary>
    public partial class EnergyPaymentScheduleCardDebit
    {
        /// <summary> Initializes a new instance of EnergyPaymentScheduleCardDebit. </summary>
        /// <param name="cardScheme"> The type of credit card held on file. </param>
        /// <param name="paymentFrequency"> The frequency that payments will occur.  Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax). </param>
        /// <param name="calculationType"> The mechanism by which the payment amount is calculated.  Explanation of values are as follows:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;**STATIC** - Indicates a consistent, static amount, per payment&lt;/li&gt;&lt;li&gt;**BALANCE** - Indicates that the outstanding balance for the account is paid per period&lt;/li&gt;&lt;li&gt;**CALCULATED** - Indicates that the payment amount is variable and calculated using a pre-defined algorithm&lt;/li&gt;&lt;/ul&gt;. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="paymentFrequency"/> is null. </exception>
        internal EnergyPaymentScheduleCardDebit(EnergyPaymentScheduleCardDebitCardScheme cardScheme, string paymentFrequency, EnergyPaymentScheduleCardDebitCalculationType calculationType)
        {
            if (paymentFrequency == null)
            {
                throw new ArgumentNullException(nameof(paymentFrequency));
            }

            CardScheme = cardScheme;
            PaymentFrequency = paymentFrequency;
            CalculationType = calculationType;
        }

        /// <summary> The type of credit card held on file. </summary>
        public EnergyPaymentScheduleCardDebitCardScheme CardScheme { get; }
        /// <summary> The frequency that payments will occur.  Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax). </summary>
        public string PaymentFrequency { get; }
        /// <summary> The mechanism by which the payment amount is calculated.  Explanation of values are as follows:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;**STATIC** - Indicates a consistent, static amount, per payment&lt;/li&gt;&lt;li&gt;**BALANCE** - Indicates that the outstanding balance for the account is paid per period&lt;/li&gt;&lt;li&gt;**CALCULATED** - Indicates that the payment amount is variable and calculated using a pre-defined algorithm&lt;/li&gt;&lt;/ul&gt;. </summary>
        public EnergyPaymentScheduleCardDebitCalculationType CalculationType { get; }
    }
}
