// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Agl.Cdr.Energy;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> The EnergyPlanContractFullAllOf. </summary>
    public partial class EnergyPlanContractFullAllOf
    {
        /// <summary> Initializes a new instance of EnergyPlanContractFullAllOf. </summary>
        /// <param name="billFrequency"> An array of the available billing schedules for this contract. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="billFrequency"/> is null. </exception>
        internal EnergyPlanContractFullAllOf(List<string> billFrequency)
        {
            if (billFrequency == null)
            {
                throw new ArgumentNullException(nameof(billFrequency));
            }

            MeterTypes = new List<string>();
            BillFrequency = billFrequency;
        }

        /// <summary> Initializes a new instance of EnergyPlanContractFullAllOf. </summary>
        /// <param name="termType"> The term for the contract.  If absent assumes no specified term. </param>
        /// <param name="benefitPeriod"> Description of the benefit period.  Should only be present if termType has the value ONGOING. </param>
        /// <param name="terms"> Free text description of the terms for the contract. </param>
        /// <param name="meterTypes"> An array of the meter types that this contract is available for. </param>
        /// <param name="coolingOffDays"> Number of days in the cooling off period for the contract.  Mandatory for plans with type of MARKET. </param>
        /// <param name="billFrequency"> An array of the available billing schedules for this contract. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax). </param>
        internal EnergyPlanContractFullAllOf(EnergyPlanContractFullAllOfTermType? termType, string benefitPeriod, string terms, IReadOnlyList<string> meterTypes, string coolingOffDays, IReadOnlyList<string> billFrequency)
        {
            TermType = termType;
            BenefitPeriod = benefitPeriod;
            Terms = terms;
            MeterTypes = meterTypes;
            CoolingOffDays = coolingOffDays;
            BillFrequency = billFrequency;
        }

        /// <summary> The term for the contract.  If absent assumes no specified term. </summary>
        public EnergyPlanContractFullAllOfTermType? TermType { get; }
        /// <summary> Description of the benefit period.  Should only be present if termType has the value ONGOING. </summary>
        public string BenefitPeriod { get; }
        /// <summary> Free text description of the terms for the contract. </summary>
        public string Terms { get; }
        /// <summary> An array of the meter types that this contract is available for. </summary>
        public IReadOnlyList<string> MeterTypes { get; }
        /// <summary> Number of days in the cooling off period for the contract.  Mandatory for plans with type of MARKET. </summary>
        public string CoolingOffDays { get; }
        /// <summary> An array of the available billing schedules for this contract. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax). </summary>
        public IReadOnlyList<string> BillFrequency { get; }
    }
}
