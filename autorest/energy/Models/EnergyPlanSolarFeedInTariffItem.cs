// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Agl.Cdr.Energy;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> The EnergyPlanSolarFeedInTariffItem. </summary>
    public partial class EnergyPlanSolarFeedInTariffItem
    {
        /// <summary> Initializes a new instance of EnergyPlanSolarFeedInTariffItem. </summary>
        /// <param name="displayName"> The name of the tariff. </param>
        /// <param name="scheme"> The applicable scheme. </param>
        /// <param name="payerType"> The type of the payer. </param>
        /// <param name="tariffUType"> The type of the payer. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/> is null. </exception>
        internal EnergyPlanSolarFeedInTariffItem(string displayName, EnergyPlanSolarFeedInTariffItemScheme scheme, EnergyPlanSolarFeedInTariffItemPayerType payerType, EnergyPlanSolarFeedInTariffItemTariffUType tariffUType)
        {
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }

            DisplayName = displayName;
            Scheme = scheme;
            PayerType = payerType;
            TariffUType = tariffUType;
        }

        /// <summary> Initializes a new instance of EnergyPlanSolarFeedInTariffItem. </summary>
        /// <param name="displayName"> The name of the tariff. </param>
        /// <param name="description"> A description of the tariff. </param>
        /// <param name="scheme"> The applicable scheme. </param>
        /// <param name="payerType"> The type of the payer. </param>
        /// <param name="tariffUType"> The type of the payer. </param>
        /// <param name="singleTariff"> Represents a constant tariff.  Mandatory if tariffUType is set to singleTariff. </param>
        /// <param name="timeVaryingTariffs"> Represents a tariff based on time.  Mandatory if tariffUType is set to timeVaryingTariffs. </param>
        internal EnergyPlanSolarFeedInTariffItem(string displayName, string description, EnergyPlanSolarFeedInTariffItemScheme scheme, EnergyPlanSolarFeedInTariffItemPayerType payerType, EnergyPlanSolarFeedInTariffItemTariffUType tariffUType, EnergyPlanSolarFeedInTariffItemSingleTariff singleTariff, EnergyPlanSolarFeedInTariffItemTimeVaryingTariffs timeVaryingTariffs)
        {
            DisplayName = displayName;
            Description = description;
            Scheme = scheme;
            PayerType = payerType;
            TariffUType = tariffUType;
            SingleTariff = singleTariff;
            TimeVaryingTariffs = timeVaryingTariffs;
        }

        /// <summary> The name of the tariff. </summary>
        public string DisplayName { get; }
        /// <summary> A description of the tariff. </summary>
        public string Description { get; }
        /// <summary> The applicable scheme. </summary>
        public EnergyPlanSolarFeedInTariffItemScheme Scheme { get; }
        /// <summary> The type of the payer. </summary>
        public EnergyPlanSolarFeedInTariffItemPayerType PayerType { get; }
        /// <summary> The type of the payer. </summary>
        public EnergyPlanSolarFeedInTariffItemTariffUType TariffUType { get; }
        /// <summary> Represents a constant tariff.  Mandatory if tariffUType is set to singleTariff. </summary>
        public EnergyPlanSolarFeedInTariffItemSingleTariff SingleTariff { get; }
        /// <summary> Represents a tariff based on time.  Mandatory if tariffUType is set to timeVaryingTariffs. </summary>
        public EnergyPlanSolarFeedInTariffItemTimeVaryingTariffs TimeVaryingTariffs { get; }
    }
}
