// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Agl.Cdr.Energy.Models
{
    /// <summary> The EnergyAccountDetail. </summary>
    public partial class EnergyAccountDetail : EnergyAccountBase
    {
        /// <summary> Initializes a new instance of EnergyAccountDetail. </summary>
        /// <param name="accountId"> The ID of the account.  To be created in accordance with CDR ID permanence requirements. </param>
        /// <param name="creationDate"> The date that the account was created or opened. </param>
        /// <param name="plans"> The array of plans containing service points and associated plan details. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="accountId"/>, <paramref name="creationDate"/>, or <paramref name="plans"/> is null. </exception>
        internal EnergyAccountDetail(string accountId, string creationDate, List<EnergyAccountDetailAllOfPlans> plans) : base(accountId, creationDate)
        {
            if (accountId == null)
            {
                throw new ArgumentNullException(nameof(accountId));
            }
            if (creationDate == null)
            {
                throw new ArgumentNullException(nameof(creationDate));
            }
            if (plans == null)
            {
                throw new ArgumentNullException(nameof(plans));
            }

            Plans = plans;
        }

        /// <summary> Initializes a new instance of EnergyAccountDetail. </summary>
        /// <param name="accountId"> The ID of the account.  To be created in accordance with CDR ID permanence requirements. </param>
        /// <param name="accountNumber"> Optional identifier of the account as defined by the data holder.  This must be the value presented on physical statements (if it exists) and must not be used for the value of accountId. </param>
        /// <param name="displayName"> An optional display name for the account if one exists or can be derived.  The content of this field is at the discretion of the data holder. </param>
        /// <param name="creationDate"> The date that the account was created or opened. </param>
        /// <param name="plans"> The array of plans containing service points and associated plan details. </param>
        internal EnergyAccountDetail(string accountId, string accountNumber, string displayName, string creationDate, IReadOnlyList<EnergyAccountDetailAllOfPlans> plans) : base(accountId, accountNumber, displayName, creationDate)
        {
            Plans = plans;
        }

        /// <summary> The array of plans containing service points and associated plan details. </summary>
        public IReadOnlyList<EnergyAccountDetailAllOfPlans> Plans { get; }
    }
}
