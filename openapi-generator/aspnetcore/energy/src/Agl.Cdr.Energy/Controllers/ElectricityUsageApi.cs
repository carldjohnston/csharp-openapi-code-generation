/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Agl.Cdr.Energy.Attributes;
using Agl.Cdr.Energy.Models;

namespace Agl.Cdr.Energy.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ElectricityUsageApiController : ControllerBase
    { 
        /// <summary>
        /// Get Usage For Service Point
        /// </summary>
        /// <remarks>Obtain a list of electricity usage data from a particular service point</remarks>
        /// <param name="servicePointId">ID of the specific service point requested.  This is a tokenised ID previous obtained from the Service Point List Data end point.  Note that it is not a nationalMeteringId.</param>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="oldestDate">Constrain the request to records with effective date at or after this date. If absent defaults to newest-date minus 24 months days.  Format is aligned to DateString common type</param>
        /// <param name="newestDate">Constrain the request to records with effective date at or before this date.  If absent defaults to current date.  Format is aligned to DateString common type</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request.  Default is 25 (standard pagination)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <param name="xFapiAuthDate">The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.</param>
        /// <param name="xFapiCustomerIpAddress">The customer&#39;s original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
        /// <param name="xCdsClientHeaders">The customer&#39;s original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;li&gt;[404 - Unavailable Service Point](#error-404-unavailable-service-point)&lt;/li&gt;&lt;li&gt;[404 - Invalid Service Point](#error-404-invalid-service-point)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpGet]
        [Route("/energy/electricity/servicepoints/{servicePointId}/usage")]
        [ValidateModelState]
        [SwaggerOperation("GetUsageForServicePoint")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyUsageListResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;li&gt;[404 - Unavailable Service Point](#error-404-unavailable-service-point)&lt;/li&gt;&lt;li&gt;[404 - Invalid Service Point](#error-404-invalid-service-point)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult GetUsageForServicePoint([FromRoute (Name = "servicePointId")][Required]string servicePointId, [FromHeader][Required()]string xV, [FromQuery (Name = "oldest-date")]string oldestDate, [FromQuery (Name = "newest-date")]string newestDate, [FromQuery (Name = "page")]decimal? page, [FromQuery (Name = "page-size")]decimal? pageSize, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId, [FromHeader]string xFapiAuthDate, [FromHeader]string xFapiCustomerIpAddress, [FromHeader]string xCdsClientHeaders)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyUsageListResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"reads\" : [ {\n      \"basicRead\" : {\n        \"value\" : 0.8008281904610115,\n        \"quality\" : \"ACTUAL\"\n      },\n      \"unitOfMeasure\" : \"unitOfMeasure\",\n      \"registerId\" : \"registerId\",\n      \"meterID\" : \"meterID\",\n      \"intervalRead\" : {\n        \"readIntervalLength\" : \"readIntervalLength\",\n        \"intervalReads\" : [ {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        }, {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        } ],\n        \"aggregateValue\" : 6.027456183070403\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"registerSuffix\" : \"registerSuffix\",\n      \"readEndDate\" : \"readEndDate\",\n      \"readStartDate\" : \"readStartDate\",\n      \"controlledLoad\" : true,\n      \"readUType\" : \"basicRead\"\n    }, {\n      \"basicRead\" : {\n        \"value\" : 0.8008281904610115,\n        \"quality\" : \"ACTUAL\"\n      },\n      \"unitOfMeasure\" : \"unitOfMeasure\",\n      \"registerId\" : \"registerId\",\n      \"meterID\" : \"meterID\",\n      \"intervalRead\" : {\n        \"readIntervalLength\" : \"readIntervalLength\",\n        \"intervalReads\" : [ {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        }, {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        } ],\n        \"aggregateValue\" : 6.027456183070403\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"registerSuffix\" : \"registerSuffix\",\n      \"readEndDate\" : \"readEndDate\",\n      \"readStartDate\" : \"readStartDate\",\n      \"controlledLoad\" : true,\n      \"readUType\" : \"basicRead\"\n    } ]\n  },\n  \"meta\" : {\n    \"totalRecords\" : 0,\n    \"totalPages\" : 6\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"last\" : \"last\",\n    \"prev\" : \"prev\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyUsageListResponse>(exampleJson)
            : default(EnergyUsageListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Bulk Usage
        /// </summary>
        /// <remarks>Obtain usage data for all service points associated with the customer</remarks>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="oldestDate">Constrain the request to records with effective date at or after this date. If absent defaults to newest-date minus 24 months days.  Format is aligned to DateString common type</param>
        /// <param name="newestDate">Constrain the request to records with effective date at or before this date.  If absent defaults to current date.  Format is aligned to DateString common type</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request.  Default is 25 (standard pagination)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <param name="xFapiAuthDate">The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.</param>
        /// <param name="xFapiCustomerIpAddress">The customer&#39;s original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
        /// <param name="xCdsClientHeaders">The customer&#39;s original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpGet]
        [Route("/energy/electricity/servicepoints/usage")]
        [ValidateModelState]
        [SwaggerOperation("ListUsageBulk")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyUsageListResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult ListUsageBulk([FromHeader][Required()]string xV, [FromQuery (Name = "oldest-date")]string oldestDate, [FromQuery (Name = "newest-date")]string newestDate, [FromQuery (Name = "page")]decimal? page, [FromQuery (Name = "page-size")]decimal? pageSize, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId, [FromHeader]string xFapiAuthDate, [FromHeader]string xFapiCustomerIpAddress, [FromHeader]string xCdsClientHeaders)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyUsageListResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"reads\" : [ {\n      \"basicRead\" : {\n        \"value\" : 0.8008281904610115,\n        \"quality\" : \"ACTUAL\"\n      },\n      \"unitOfMeasure\" : \"unitOfMeasure\",\n      \"registerId\" : \"registerId\",\n      \"meterID\" : \"meterID\",\n      \"intervalRead\" : {\n        \"readIntervalLength\" : \"readIntervalLength\",\n        \"intervalReads\" : [ {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        }, {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        } ],\n        \"aggregateValue\" : 6.027456183070403\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"registerSuffix\" : \"registerSuffix\",\n      \"readEndDate\" : \"readEndDate\",\n      \"readStartDate\" : \"readStartDate\",\n      \"controlledLoad\" : true,\n      \"readUType\" : \"basicRead\"\n    }, {\n      \"basicRead\" : {\n        \"value\" : 0.8008281904610115,\n        \"quality\" : \"ACTUAL\"\n      },\n      \"unitOfMeasure\" : \"unitOfMeasure\",\n      \"registerId\" : \"registerId\",\n      \"meterID\" : \"meterID\",\n      \"intervalRead\" : {\n        \"readIntervalLength\" : \"readIntervalLength\",\n        \"intervalReads\" : [ {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        }, {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        } ],\n        \"aggregateValue\" : 6.027456183070403\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"registerSuffix\" : \"registerSuffix\",\n      \"readEndDate\" : \"readEndDate\",\n      \"readStartDate\" : \"readStartDate\",\n      \"controlledLoad\" : true,\n      \"readUType\" : \"basicRead\"\n    } ]\n  },\n  \"meta\" : {\n    \"totalRecords\" : 0,\n    \"totalPages\" : 6\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"last\" : \"last\",\n    \"prev\" : \"prev\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyUsageListResponse>(exampleJson)
            : default(EnergyUsageListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Usage For Specific Service Points
        /// </summary>
        /// <remarks>Obtain the electricity usage data for a specific set of service points</remarks>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="UNKNOWN_BASE_TYPE">Request payload containing list of specific Service Points to obtain data for</param>
        /// <param name="oldestDate">Constrain the request to records with effective date at or after this date. If absent defaults to newest-date minus 24 months days.  Format is aligned to DateString common type</param>
        /// <param name="newestDate">Constrain the request to records with effective date at or before this date.  If absent defaults to current date.  Format is aligned to DateString common type</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request.  Default is 25 (standard pagination)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <param name="xFapiAuthDate">The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.</param>
        /// <param name="xFapiCustomerIpAddress">The customer&#39;s original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
        /// <param name="xCdsClientHeaders">The customer&#39;s original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;li&gt;[422 - Unavailable Service Point](#error-422-unavailable-service-point)&lt;/li&gt;&lt;li&gt;[422 - Invalid Service Point](#error-422-invalid-service-point)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpPost]
        [Route("/energy/electricity/servicepoints/usage")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("ListUsageForServicePoints")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyUsageListResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;li&gt;[422 - Unavailable Service Point](#error-422-unavailable-service-point)&lt;/li&gt;&lt;li&gt;[422 - Invalid Service Point](#error-422-invalid-service-point)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult ListUsageForServicePoints([FromHeader][Required()]string xV, [FromBody]UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE, [FromQuery (Name = "oldest-date")]string oldestDate, [FromQuery (Name = "newest-date")]string newestDate, [FromQuery (Name = "page")]decimal? page, [FromQuery (Name = "page-size")]decimal? pageSize, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId, [FromHeader]string xFapiAuthDate, [FromHeader]string xFapiCustomerIpAddress, [FromHeader]string xCdsClientHeaders)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyUsageListResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"reads\" : [ {\n      \"basicRead\" : {\n        \"value\" : 0.8008281904610115,\n        \"quality\" : \"ACTUAL\"\n      },\n      \"unitOfMeasure\" : \"unitOfMeasure\",\n      \"registerId\" : \"registerId\",\n      \"meterID\" : \"meterID\",\n      \"intervalRead\" : {\n        \"readIntervalLength\" : \"readIntervalLength\",\n        \"intervalReads\" : [ {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        }, {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        } ],\n        \"aggregateValue\" : 6.027456183070403\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"registerSuffix\" : \"registerSuffix\",\n      \"readEndDate\" : \"readEndDate\",\n      \"readStartDate\" : \"readStartDate\",\n      \"controlledLoad\" : true,\n      \"readUType\" : \"basicRead\"\n    }, {\n      \"basicRead\" : {\n        \"value\" : 0.8008281904610115,\n        \"quality\" : \"ACTUAL\"\n      },\n      \"unitOfMeasure\" : \"unitOfMeasure\",\n      \"registerId\" : \"registerId\",\n      \"meterID\" : \"meterID\",\n      \"intervalRead\" : {\n        \"readIntervalLength\" : \"readIntervalLength\",\n        \"intervalReads\" : [ {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        }, {\n          \"value\" : 1.4658129805029452,\n          \"quality\" : \"ACTUAL\"\n        } ],\n        \"aggregateValue\" : 6.027456183070403\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"registerSuffix\" : \"registerSuffix\",\n      \"readEndDate\" : \"readEndDate\",\n      \"readStartDate\" : \"readStartDate\",\n      \"controlledLoad\" : true,\n      \"readUType\" : \"basicRead\"\n    } ]\n  },\n  \"meta\" : {\n    \"totalRecords\" : 0,\n    \"totalPages\" : 6\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"last\" : \"last\",\n    \"prev\" : \"prev\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyUsageListResponse>(exampleJson)
            : default(EnergyUsageListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
