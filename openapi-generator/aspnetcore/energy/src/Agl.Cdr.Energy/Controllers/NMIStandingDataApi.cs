/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Agl.Cdr.Energy.Attributes;
using Agl.Cdr.Energy.Models;

namespace Agl.Cdr.Energy.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class NMIStandingDataApiController : ControllerBase
    { 
        /// <summary>
        /// Get Service Point Detail
        /// </summary>
        /// <remarks>Obtain detailed standing information for a specific service point that is owned by the customer that has authorised the current session</remarks>
        /// <param name="servicePointId">ID of the specific service point requested.  This is a tokenised ID previous obtained from the Service Point List Data end point.  Note that it is not a nationalMeteringId.</param>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <param name="xFapiAuthDate">The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.</param>
        /// <param name="xFapiCustomerIpAddress">The customer&#39;s original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
        /// <param name="xCdsClientHeaders">The customer&#39;s original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[404 - Unavailable Service Point](#error-404-unavailable-service-point)&lt;/li&gt;&lt;li&gt;[404 - Invalid Service Point](#error-404-invalid-service-point)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpGet]
        [Route("/energy/electricity/servicepoints/{servicePointId}")]
        [ValidateModelState]
        [SwaggerOperation("GetServicePoint")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyServicePointDetailResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[404 - Unavailable Service Point](#error-404-unavailable-service-point)&lt;/li&gt;&lt;li&gt;[404 - Invalid Service Point](#error-404-invalid-service-point)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult GetServicePoint([FromRoute (Name = "servicePointId")][Required]string servicePointId, [FromHeader][Required()]string xV, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId, [FromHeader]string xFapiAuthDate, [FromHeader]string xFapiCustomerIpAddress, [FromHeader]string xCdsClientHeaders)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyServicePointDetailResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"lastUpdateDateTime\" : \"lastUpdateDateTime\",\n    \"consumerProfile\" : {\n      \"threshold\" : \"LOW\",\n      \"classification\" : \"BUSINESS\"\n    },\n    \"distributionLossFactor\" : {\n      \"code\" : \"code\",\n      \"description\" : \"description\",\n      \"lossValue\" : \"lossValue\"\n    },\n    \"servicePointId\" : \"servicePointId\",\n    \"relatedParticipants\" : [ {\n      \"role\" : \"FRMP\",\n      \"party\" : \"party\"\n    }, {\n      \"role\" : \"FRMP\",\n      \"party\" : \"party\"\n    } ],\n    \"servicePointStatus\" : \"ACTIVE\",\n    \"servicePointClassification\" : \"EXTERNAL_PROFILE\",\n    \"meters\" : {\n      \"meterId\" : \"meterId\",\n      \"registers\" : {\n        \"unitOfMeasure\" : \"unitOfMeasure\",\n        \"registerId\" : \"registerId\",\n        \"consumptionType\" : \"ACTUAL\",\n        \"averagedDailyLoad\" : 5.962133916683182,\n        \"multiplier\" : 5.637376656633329,\n        \"registerConsumptionType\" : \"INTERVAL\",\n        \"networkTariffCode\" : \"networkTariffCode\",\n        \"registerSuffix\" : \"registerSuffix\",\n        \"controlledLoad\" : true,\n        \"timeOfDay\" : \"ALLDAY\"\n      },\n      \"specifications\" : {\n        \"installationType\" : \"BASIC\",\n        \"nextScheduledReadDate\" : \"nextScheduledReadDate\",\n        \"model\" : \"model\",\n        \"readType\" : \"readType\",\n        \"status\" : \"CURRENT\",\n        \"manufacturer\" : \"manufacturer\"\n      }\n    },\n    \"jurisdictionCode\" : \"ALL\",\n    \"validFromDate\" : \"validFromDate\",\n    \"location\" : {\n      \"paf\" : {\n        \"streetType\" : \"streetType\",\n        \"floorLevelNumber\" : \"floorLevelNumber\",\n        \"thoroughfareNumber1Suffix\" : \"thoroughfareNumber1Suffix\",\n        \"postalDeliveryNumber\" : 1,\n        \"dpid\" : \"dpid\",\n        \"thoroughfareNumber2\" : 6,\n        \"postcode\" : \"postcode\",\n        \"thoroughfareNumber1\" : 0,\n        \"flatUnitNumber\" : \"flatUnitNumber\",\n        \"lotNumber\" : \"lotNumber\",\n        \"buildingName1\" : \"buildingName1\",\n        \"buildingName2\" : \"buildingName2\",\n        \"streetName\" : \"streetName\",\n        \"localityName\" : \"localityName\",\n        \"flatUnitType\" : \"flatUnitType\",\n        \"floorLevelType\" : \"floorLevelType\",\n        \"postalDeliveryNumberSuffix\" : \"postalDeliveryNumberSuffix\",\n        \"postalDeliveryType\" : \"postalDeliveryType\",\n        \"streetSuffix\" : \"streetSuffix\",\n        \"state\" : \"state\",\n        \"postalDeliveryNumberPrefix\" : \"postalDeliveryNumberPrefix\",\n        \"thoroughfareNumber2Suffix\" : \"thoroughfareNumber2Suffix\"\n      },\n      \"simple\" : {\n        \"country\" : \"AUS\",\n        \"city\" : \"city\",\n        \"postcode\" : \"postcode\",\n        \"addressLine1\" : \"addressLine1\",\n        \"addressLine2\" : \"addressLine2\",\n        \"addressLine3\" : \"addressLine3\",\n        \"state\" : \"state\",\n        \"mailingName\" : \"mailingName\"\n      },\n      \"addressUType\" : \"simple\"\n    },\n    \"nationalMeteringId\" : \"nationalMeteringId\",\n    \"isGenerator\" : true\n  },\n  \"meta\" : \"{}\",\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyServicePointDetailResponse>(exampleJson)
            : default(EnergyServicePointDetailResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Service Points
        /// </summary>
        /// <remarks>Obtain a list of service points owned by the customer that has authorised the current session</remarks>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request.  Default is 25 (standard pagination)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <param name="xFapiAuthDate">The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.</param>
        /// <param name="xFapiCustomerIpAddress">The customer&#39;s original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
        /// <param name="xCdsClientHeaders">The customer&#39;s original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpGet]
        [Route("/energy/electricity/servicepoints")]
        [ValidateModelState]
        [SwaggerOperation("ListServicePoints")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyServicePointListResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult ListServicePoints([FromHeader][Required()]string xV, [FromQuery (Name = "page")]decimal? page, [FromQuery (Name = "page-size")]decimal? pageSize, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId, [FromHeader]string xFapiAuthDate, [FromHeader]string xFapiCustomerIpAddress, [FromHeader]string xCdsClientHeaders)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyServicePointListResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"servicePoints\" : [ {\n      \"lastUpdateDateTime\" : \"lastUpdateDateTime\",\n      \"consumerProfile\" : {\n        \"threshold\" : \"LOW\",\n        \"classification\" : \"BUSINESS\"\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"jurisdictionCode\" : \"ALL\",\n      \"validFromDate\" : \"validFromDate\",\n      \"nationalMeteringId\" : \"nationalMeteringId\",\n      \"servicePointStatus\" : \"ACTIVE\",\n      \"servicePointClassification\" : \"EXTERNAL_PROFILE\",\n      \"isGenerator\" : true\n    }, {\n      \"lastUpdateDateTime\" : \"lastUpdateDateTime\",\n      \"consumerProfile\" : {\n        \"threshold\" : \"LOW\",\n        \"classification\" : \"BUSINESS\"\n      },\n      \"servicePointId\" : \"servicePointId\",\n      \"jurisdictionCode\" : \"ALL\",\n      \"validFromDate\" : \"validFromDate\",\n      \"nationalMeteringId\" : \"nationalMeteringId\",\n      \"servicePointStatus\" : \"ACTIVE\",\n      \"servicePointClassification\" : \"EXTERNAL_PROFILE\",\n      \"isGenerator\" : true\n    } ]\n  },\n  \"meta\" : {\n    \"totalRecords\" : 0,\n    \"totalPages\" : 6\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"last\" : \"last\",\n    \"prev\" : \"prev\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyServicePointListResponse>(exampleJson)
            : default(EnergyServicePointListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
