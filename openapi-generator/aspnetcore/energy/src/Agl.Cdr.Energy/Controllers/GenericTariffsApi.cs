/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Agl.Cdr.Energy.Attributes;
using Agl.Cdr.Energy.Models;

namespace Agl.Cdr.Energy.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class GenericTariffsApiController : ControllerBase
    { 
        /// <summary>
        /// Get Generic Plan Detail
        /// </summary>
        /// <remarks>Obtain detailed information on a single energy plan offered openly to the market</remarks>
        /// <param name="planId">ID of the specific plan requested</param>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[404 - Invalid Resource](#error-404-resource-invalid)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpGet]
        [Route("/energy/plans/{planId}")]
        [ValidateModelState]
        [SwaggerOperation("GetPlan")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyPlanResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[404 - Invalid Resource](#error-404-resource-invalid)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult GetPlan([FromRoute (Name = "planId")][Required]string planId, [FromHeader][Required()]string xV, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyPlanResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"meta\" : \"{}\",\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyPlanResponse>(exampleJson)
            : default(EnergyPlanResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Generic Plans
        /// </summary>
        /// <remarks>Obtain a list of energy plans that are currently offered to the market.  Note that the results returned by this end point are expected to be ordered in descending order according to &#x60;lastUpdated&#x60;.</remarks>
        /// <param name="xV">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
        /// <param name="type">Used to filter results on the type field.  Any one of the valid values for this field can be supplied plus &#39;ALL&#39;.  If absent defaults to &#39;ALL&#39;</param>
        /// <param name="fuelType">Used to filter results on the fuelType field.  Any one of the valid values for this field can be supplied plus &#39;ALL&#39;.  If absent defaults to &#39;ALL&#39;</param>
        /// <param name="effective">Allows for the filtering of plans based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to &#39;CURRENT&#39;</param>
        /// <param name="updatedSince">Only include plans that have been updated after the specified date and time.  If absent defaults to include all plans</param>
        /// <param name="brand">Used to filter results on the brand field.  If absent defaults to include all plans</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request.  Default is 25 (standard pagination)</param>
        /// <param name="xMinV">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
        /// <param name="xFapiInteractionId">An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.</param>
        /// <response code="200">Successful response</response>
        /// <response code="0">The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;/ul&gt;</response>
        [HttpGet]
        [Route("/energy/plans")]
        [ValidateModelState]
        [SwaggerOperation("ListPlans")]
        [SwaggerResponse(statusCode: 200, type: typeof(EnergyPlanListResponse), description: "Successful response")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorListResponse), description: "The following error codes MUST be supported:&lt;br/&gt;&lt;ul class&#x3D;\&quot;error-code-list\&quot;&gt;&lt;li&gt;[400 - Invalid Field](#error-400-field-invalid)&lt;/li&gt;&lt;li&gt;[400 - Invalid Page Size](#error-400-field-invalid-page-size)&lt;/li&gt;&lt;li&gt;[400 - Invalid Version](#error-400-header-invalid-version)&lt;/li&gt;&lt;li&gt;[406 - Unsupported Version](#error-406-header-unsupported-version)&lt;/li&gt;&lt;li&gt;[422 - Invalid Page](#error-422-field-invalid-page)&lt;/li&gt;&lt;/ul&gt;")]
        public virtual IActionResult ListPlans([FromHeader][Required()]string xV, [FromQuery (Name = "type")]string type, [FromQuery (Name = "fuelType")]string fuelType, [FromQuery (Name = "effective")]string effective, [FromQuery (Name = "updated-since")]string updatedSince, [FromQuery (Name = "brand")]string brand, [FromQuery (Name = "page")]decimal? page, [FromQuery (Name = "page-size")]decimal? pageSize, [FromHeader]string xMinV, [FromHeader]string xFapiInteractionId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EnergyPlanListResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorListResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"plans\" : [ {\n      \"additionalInformation\" : {\n        \"eligibilityUri\" : \"eligibilityUri\",\n        \"bundleUri\" : \"bundleUri\",\n        \"pricingUri\" : \"pricingUri\",\n        \"termsUri\" : \"termsUri\",\n        \"overviewUri\" : \"overviewUri\"\n      },\n      \"brandName\" : \"brandName\",\n      \"displayName\" : \"displayName\",\n      \"description\" : \"description\",\n      \"type\" : \"STANDING\",\n      \"effectiveTo\" : \"effectiveTo\",\n      \"lastUpdated\" : \"lastUpdated\",\n      \"customerType\" : \"RESIDENTIAL\",\n      \"fuelType\" : \"ELECTRICITY\",\n      \"geography\" : {\n        \"excludedPostcodes\" : [ \"excludedPostcodes\", \"excludedPostcodes\" ],\n        \"includedPostcodes\" : [ \"includedPostcodes\", \"includedPostcodes\" ]\n      },\n      \"planId\" : \"planId\",\n      \"applicationUri\" : \"applicationUri\",\n      \"effectiveFrom\" : \"effectiveFrom\",\n      \"brand\" : \"brand\"\n    }, {\n      \"additionalInformation\" : {\n        \"eligibilityUri\" : \"eligibilityUri\",\n        \"bundleUri\" : \"bundleUri\",\n        \"pricingUri\" : \"pricingUri\",\n        \"termsUri\" : \"termsUri\",\n        \"overviewUri\" : \"overviewUri\"\n      },\n      \"brandName\" : \"brandName\",\n      \"displayName\" : \"displayName\",\n      \"description\" : \"description\",\n      \"type\" : \"STANDING\",\n      \"effectiveTo\" : \"effectiveTo\",\n      \"lastUpdated\" : \"lastUpdated\",\n      \"customerType\" : \"RESIDENTIAL\",\n      \"fuelType\" : \"ELECTRICITY\",\n      \"geography\" : {\n        \"excludedPostcodes\" : [ \"excludedPostcodes\", \"excludedPostcodes\" ],\n        \"includedPostcodes\" : [ \"includedPostcodes\", \"includedPostcodes\" ]\n      },\n      \"planId\" : \"planId\",\n      \"applicationUri\" : \"applicationUri\",\n      \"effectiveFrom\" : \"effectiveFrom\",\n      \"brand\" : \"brand\"\n    } ]\n  },\n  \"meta\" : {\n    \"totalRecords\" : 0,\n    \"totalPages\" : 6\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"last\" : \"last\",\n    \"prev\" : \"prev\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EnergyPlanListResponse>(exampleJson)
            : default(EnergyPlanListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
