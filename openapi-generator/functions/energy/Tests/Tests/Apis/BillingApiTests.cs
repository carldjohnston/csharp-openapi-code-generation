/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * The version of the OpenAPI document: 1.15.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Agl.Cdr.Energy.Client;
using Agl.Cdr.Energy.Apis;
// uncomment below to import models
//using Agl.Cdr.Energy.Models;

namespace Agl.Cdr.Energy.Test.Api
{
    /// <summary>
    ///  Class for testing BillingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BillingApiTests : IDisposable
    {
        private BillingApi instance;

        public BillingApiTests()
        {
            instance = new BillingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BillingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BillingApi
            //Assert.IsType<BillingApi>(instance);
        }

        /// <summary>
        /// Test GetBalanceForAccount
        /// </summary>
        [Fact]
        public void GetBalanceForAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string xV = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.GetBalanceForAccount(accountId, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyBalanceResponse>(response);
        }

        /// <summary>
        /// Test GetBillingForAccount
        /// </summary>
        [Fact]
        public void GetBillingForAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string xV = null;
            //string newestTime = null;
            //string oldestTime = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.GetBillingForAccount(accountId, xV, newestTime, oldestTime, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyBillingListResponse>(response);
        }

        /// <summary>
        /// Test GetInvoicesForAccount
        /// </summary>
        [Fact]
        public void GetInvoicesForAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string xV = null;
            //string newestDate = null;
            //string oldestDate = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.GetInvoicesForAccount(accountId, xV, newestDate, oldestDate, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyInvoiceListResponse>(response);
        }

        /// <summary>
        /// Test ListBalancesBulk
        /// </summary>
        [Fact]
        public void ListBalancesBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xV = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.ListBalancesBulk(xV, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyBalanceListResponse>(response);
        }

        /// <summary>
        /// Test ListBalancesForAccounts
        /// </summary>
        [Fact]
        public void ListBalancesForAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xV = null;
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.ListBalancesForAccounts(xV, UNKNOWN_BASE_TYPE, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyBalanceListResponse>(response);
        }

        /// <summary>
        /// Test ListBillingBulk
        /// </summary>
        [Fact]
        public void ListBillingBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xV = null;
            //string newestTime = null;
            //string oldestTime = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.ListBillingBulk(xV, newestTime, oldestTime, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyBillingListResponse>(response);
        }

        /// <summary>
        /// Test ListBillingForAccounts
        /// </summary>
        [Fact]
        public void ListBillingForAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xV = null;
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //string newestTime = null;
            //string oldestTime = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.ListBillingForAccounts(xV, UNKNOWN_BASE_TYPE, newestTime, oldestTime, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyBillingListResponse>(response);
        }

        /// <summary>
        /// Test ListInvoicesBulk
        /// </summary>
        [Fact]
        public void ListInvoicesBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xV = null;
            //string newestDate = null;
            //string oldestDate = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.ListInvoicesBulk(xV, newestDate, oldestDate, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyInvoiceListResponse>(response);
        }

        /// <summary>
        /// Test ListInvoicesForAccounts
        /// </summary>
        [Fact]
        public void ListInvoicesForAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xV = null;
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //string newestDate = null;
            //string oldestDate = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //string xMinV = null;
            //string xFapiInteractionId = null;
            //string xFapiAuthDate = null;
            //string xFapiCustomerIpAddress = null;
            //string xCdsClientHeaders = null;
            //var response = instance.ListInvoicesForAccounts(xV, UNKNOWN_BASE_TYPE, newestDate, oldestDate, page, pageSize, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsClientHeaders);
            //Assert.IsType<EnergyInvoiceListResponse>(response);
        }
    }
}
