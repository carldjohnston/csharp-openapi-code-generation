/*
 * CDR Common API
 *
 * Consumer Data Standards APIs created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker to meet the needs of the Consumer Data Right
 *
 * The version of the OpenAPI document: 1.15.0
 * Contact: contact@consumerdatastandards.gov.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;

namespace Agl.Cdr.Common.Apis
{ 
    public partial class CommonApi
    { 
        [FunctionName("CommonApi_GetCustomer")]
        public async Task<IActionResult> _GetCustomer([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/common/customer")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetCustomer");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("CommonApi_GetCustomerDetail")]
        public async Task<IActionResult> _GetCustomerDetail([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/common/customer/detail")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetCustomerDetail");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("CommonApi_GetOutages")]
        public async Task<IActionResult> _GetOutages([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/discovery/outages")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetOutages");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("CommonApi_GetStatus")]
        public async Task<IActionResult> _GetStatus([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/discovery/status")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetStatus");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }
    }
}

