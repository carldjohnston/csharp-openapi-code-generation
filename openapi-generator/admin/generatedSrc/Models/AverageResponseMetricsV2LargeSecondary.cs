/*
 * CDR Admin API
 *
 * Data Holder Consumer Data Standards Administration End Points created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker
 *
 * The version of the OpenAPI document: 1.15.0
 * Contact: contact@consumerdatastandards.gov.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Agl.Cdr.Admin
{
    /// <summary>
    /// Average response time for the large payload tier.  Mandatory for data holders designated for a Shared Responsibility Data Request data cluster
    /// </summary>
    [DataContract(Name = "AverageResponseMetricsV2_largeSecondary")]
    public partial class AverageResponseMetricsV2LargeSecondary : IEquatable<AverageResponseMetricsV2LargeSecondary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AverageResponseMetricsV2LargeSecondary" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AverageResponseMetricsV2LargeSecondary() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AverageResponseMetricsV2LargeSecondary" /> class.
        /// </summary>
        /// <param name="primary">primary (required).</param>
        /// <param name="secondary">secondary (required).</param>
        public AverageResponseMetricsV2LargeSecondary(AverageResponseMetricsV2SecondaryPrimary primary = default(AverageResponseMetricsV2SecondaryPrimary), AverageResponseMetricsV2SecondarySecondary secondary = default(AverageResponseMetricsV2SecondarySecondary))
        {
            // to ensure "primary" is required (not null)
            this.Primary = primary ?? throw new ArgumentNullException("primary is a required property for AverageResponseMetricsV2LargeSecondary and cannot be null");
            // to ensure "secondary" is required (not null)
            this.Secondary = secondary ?? throw new ArgumentNullException("secondary is a required property for AverageResponseMetricsV2LargeSecondary and cannot be null");
        }

        /// <summary>
        /// Gets or Sets Primary
        /// </summary>
        [DataMember(Name = "primary", IsRequired = true, EmitDefaultValue = false)]
        public AverageResponseMetricsV2SecondaryPrimary Primary { get; set; }

        /// <summary>
        /// Gets or Sets Secondary
        /// </summary>
        [DataMember(Name = "secondary", IsRequired = true, EmitDefaultValue = false)]
        public AverageResponseMetricsV2SecondarySecondary Secondary { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AverageResponseMetricsV2LargeSecondary {\n");
            sb.Append("  Primary: ").Append(Primary).Append("\n");
            sb.Append("  Secondary: ").Append(Secondary).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AverageResponseMetricsV2LargeSecondary);
        }

        /// <summary>
        /// Returns true if AverageResponseMetricsV2LargeSecondary instances are equal
        /// </summary>
        /// <param name="input">Instance of AverageResponseMetricsV2LargeSecondary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AverageResponseMetricsV2LargeSecondary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Primary == input.Primary ||
                    (this.Primary != null &&
                    this.Primary.Equals(input.Primary))
                ) && 
                (
                    this.Secondary == input.Secondary ||
                    (this.Secondary != null &&
                    this.Secondary.Equals(input.Secondary))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Primary != null)
                    hashCode = hashCode * 59 + this.Primary.GetHashCode();
                if (this.Secondary != null)
                    hashCode = hashCode * 59 + this.Secondary.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
